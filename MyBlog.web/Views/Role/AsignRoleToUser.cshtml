@model List<RoleViewModel>  
@{
    ViewData["Title"] = "Asign Role To User";
}


<div class="container my-4">
    <h2>Set roles for @ViewBag.FullName</h2>
    <form id="roleForm" asp-action="AsignRoleToUser" method="post">
        <input type="hidden" name="userId" value="@ViewBag.UserId" />
        <input type="hidden" name="jsonRoles"  />
    

    <table class="table table-bordered">
        <thead>
            <tr>
                
                <th>Role Name</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var Role in Model)
            {
                <tr>
                    
                    <td>@Role.RoleName</td>
                    <td>
                        <input type="checkbox" class="role-checkbox" data-rolename="@Role.RoleName"
                               data-roleid="@Role.RoleId" @(Role.UserRole ? "checked" : "") />
                    </td>
                </tr>

            }
    </tbody>
</table>
        <button type="submit" class="btn btn-primary my-3">Save Roles</button>
    </form>
</div>


@section Scripts{
    <script>
        document.getElementById('roleForm').addEventListener('submit',function(event){
            event.preventDefault();

            let roleList= [];
            document.querySelectorAll('.role-checkbox').forEach((checkbox) => {
                roleList.push({
                    RoleName: checkbox.dataset.rolename,
                    RoleId: checkbox.dataset.roleid,
                    UserRole: checkbox.checked
                });
            });

            const input =document.querySelector('input[name="jsonRoles"]');
            input.value = JSON.stringify(roleList); // set the data as json string




            event.target.submit(); // submit form after set the data as json
        });

    </script>
}

